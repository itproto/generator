const passport = require('passport')

const loginForm = () => {
  return (`
  <form action="/login" method="post">
    <div>
        <label>Username:</label>
        <input type="text" name="username"/>
    </div>
    <div>
        <label>Password:</label>
        <input type="password" name="password"/>
    </div>
    <div>
        <input type="submit" value="Log In"/>
    </div>
</form>
`)
}

const users$ = ({ username, id }) => Promise.resolve({ username: 'John', pass: 'pass', id: '123' })

const authenticate = (username, pass, cb) => {
  users$(username).then(u => {
    if (username === u.username && pass === u.pass) {
      cb(null, u)
    } else {
      cb(null, false, { message: 'Wrong pass' })
    }
  })
}

let passStrategy
passStrategy = new (require('passport-local').Strategy)(authenticate)

passport.use(passStrategy)

// save in session
passport.serializeUser((user, cb) => {
  cb(null, user.id)
})
// load from session
passport.deserializeUser((id, cb) => {
  users$(id).then(u => cb(null, u))
})

// ensure
const ensureAuthenticated = (req, res, next) => req.isAuthenticated() ? next() : res.redirect('/login')

const express = require('express')
module.exports = express.Router()
  .use(require('express-session')({
    secret: process.env.SECRET,
    resave: false,
    saveUninitialized: true
  }))
  .use(passport.initialize())
  .use(passport.session())
  .get('/login', (req, res) => {
    return res.type('html').send(loginForm())
  })
  .post('/login', express.urlencoded({ extended: false }), passport.authenticate('local', {
    successRedirect: '/',
    failureRedirect: '/login'
    // failureFlash: true,
    // successFlash: 'Welcome'
  }))
  .get('/logout', (req, res) => {
    req.logout()
    res.redirect('/')
  })
  .get('/protected', ensureAuthenticated, (req, res) => {
    res.send('I am protected')
  })

/*
  .all('*', (req, res, next) => {
    if (req.path === '/' || req.path === '/login') { next() } else { ensureAuthenticated(req, res, next) }
  })
  */
