const whitelist = ['*', 'http://itpr.com']
const complexCors = {
  origin: (origin, cb) => {
    Promise.resolve(whitelist).then(origins => cb(null, origins))
  },
  methods: ['POST'],
  credentials: true,
  maxAge: 3600
}
const defaultCors = {
  'origin': '*',
  'methods': 'GET,HEAD,PUT,PATCH,POST,DELETE',
  'preflightContinue': false,
  'optionsSuccessStatus': 204
}
app
  .get('/simple-corse', require('cors')(), (req, res) => res.send(defaultCors))
  .get('/complex-corse', require('cors')(complexCors), controller.gets)
  .get('/cached', require('apicache')('5 minutes'), controller.gets)
  .use((req, res, next) => {
    res.header('Access-Control-Allow-Origin', '*')
    // authorized headers for preflight requests
    // https://developer.mozilla.org/en-US/docs/Glossary/preflight_request
    res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept')
    next()
    app.options('*', (req, res) => {
      // allowed XHR methods
      res.header('Access-Control-Allow-Methods', 'GET, PATCH, PUT, POST, DELETE, OPTIONS')
      res.send()
    })
  })
